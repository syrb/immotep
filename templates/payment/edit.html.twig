{% extends 'base.html.twig' %}

{% block title %}Modifier un paiement{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <style>
        .required-label::after {
            content: " *";
            color: red;
        }
        .form-section {
            background-color: #f8f9fa;
            padding: 20px;
            border-radius: 8px;
            margin-bottom: 20px;
        }
    </style>
{% endblock %}

{% block body %}
<div class="container mt-4">
    <nav aria-label="breadcrumb">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="{{ path('app_dashboard') }}">Dashboard</a></li>
            <li class="breadcrumb-item"><a href="{{ path('app_payment_index') }}">Paiements</a></li>
            <li class="breadcrumb-item"><a href="{{ path('app_lease_payments', {'id': payment.lease.id}) }}">Bail #{{ payment.lease.id }}</a></li>
            <li class="breadcrumb-item active" aria-current="page">Modifier paiement</li>
        </ol>
    </nav>

    {% for label, messages in app.flashes %}
        {% for message in messages %}
            <div class="alert alert-{{ label }} alert-dismissible fade show" role="alert">
                {{ message }}
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        {% endfor %}
    {% endfor %}

    <div class="card">
        <div class="card-header bg-primary text-white">
            <h1 class="h3 mb-0">Modifier le paiement</h1>
        </div>
        <div class="card-body">
            <div class="mb-4">
                <h5>Informations sur le bail</h5>
                <p>
                    <strong>Appartement :</strong> {{ payment.lease.apartment.name }}<br>
                    <strong>Locataire(s) :</strong> {{ payment.lease.tenantsNames }}<br>
                    <strong>Période du bail :</strong> {{ payment.lease.startDate|date('d/m/Y') }} au {{ payment.lease.endDate|date('d/m/Y') }}
                </p>
            </div>
            
            {{ form_start(form, {'attr': {'novalidate': 'novalidate', 'id': 'payment-form'}}) }}
            
            <div class="form-section">
                <h5 class="mb-3">Détails du paiement</h5>
                <div class="row">
                    <div class="col-md-6 mb-3">
                        {{ form_label(form.dueDate, null, {'label_attr': {'class': 'required-label'}}) }}
                        {{ form_widget(form.dueDate, {'attr': {'class': 'form-control' ~ (form.dueDate.vars.valid ? '' : ' is-invalid')}}) }}
                        {{ form_errors(form.dueDate) }}
                    </div>
                    <div class="col-md-6 mb-3">
                        {{ form_label(form.amount, null, {'label_attr': {'class': 'required-label'}}) }}
                        {{ form_widget(form.amount, {'attr': {'class': 'form-control' ~ (form.amount.vars.valid ? '' : ' is-invalid')}}) }}
                        {{ form_errors(form.amount) }}
                    </div>
                </div>
            </div>
            
            <div class="form-section">
                <h5 class="mb-3">Statut et informations de paiement</h5>
                <div class="row">
                    <div class="col-md-4 mb-3">
                        {{ form_label(form.status, null, {'label_attr': {'class': 'required-label'}}) }}
                        {{ form_widget(form.status, {'attr': {'class': 'form-select' ~ (form.status.vars.valid ? '' : ' is-invalid')}}) }}
                        {{ form_errors(form.status) }}
                    </div>
                    <div class="col-md-4 mb-3">
                        {{ form_label(form.paymentDate) }}
                        {{ form_widget(form.paymentDate, {'attr': {'class': 'form-control' ~ (form.paymentDate.vars.valid ? '' : ' is-invalid')}}) }}
                        {{ form_errors(form.paymentDate) }}
                    </div>
                    <div class="col-md-4 mb-3">
                        {{ form_label(form.paymentMethod) }}
                        {{ form_widget(form.paymentMethod, {'attr': {'class': 'form-select' ~ (form.paymentMethod.vars.valid ? '' : ' is-invalid')}}) }}
                        {{ form_errors(form.paymentMethod) }}
                    </div>
                </div>
                
                <div class="mb-3">
                    {{ form_label(form.notes) }}
                    {{ form_widget(form.notes, {'attr': {'class': 'form-control' ~ (form.notes.vars.valid ? '' : ' is-invalid')}}) }}
                    {{ form_errors(form.notes) }}
                </div>
            </div>
            
            <div class="d-flex justify-content-between">
                <a href="{{ path('app_lease_payments', {'id': payment.lease.id}) }}" class="btn btn-secondary">
                    <i class="fas fa-arrow-left"></i> Retour
                </a>
                <button type="submit" class="btn btn-success">
                    <i class="fas fa-save"></i> Enregistrer
                </button>
            </div>
            
            {{ form_end(form) }}
        </div>
    </div>
</div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Affichage conditionnel des champs en fonction du statut
            const statusSelect = document.querySelector('#{{ form.status.vars.id }}');
            const paymentDateGroup = document.querySelector('#{{ form.paymentDate.vars.id }}').closest('.mb-3');
            const paymentMethodGroup = document.querySelector('#{{ form.paymentMethod.vars.id }}').closest('.mb-3');
            
            function updateFieldsVisibility() {
                if (statusSelect.value === 'Payé') {
                    paymentDateGroup.style.display = 'block';
                    paymentMethodGroup.style.display = 'block';
                } else {
                    paymentDateGroup.style.display = 'none';
                    paymentMethodGroup.style.display = 'none';
                }
            }
            
            // Initialisation
            updateFieldsVisibility();
            
            // Mise à jour quand le statut change
            statusSelect.addEventListener('change', updateFieldsVisibility);
        });
    </script>
{% endblock %}